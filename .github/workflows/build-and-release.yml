name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important to get all history for tags
          token: ${{ secrets.PAT }}  # Use PAT instead of GITHUB_TOKEN to enable pushing

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Update version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Updating version to $VERSION"
          
          # Configure git user
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Update version in build.gradle.kts
          sed -i "s/version = \".*\"/version = \"$VERSION\"/" build.gradle.kts
          
          # Commit changes
          git add build.gradle.kts
          git commit -m "Update version to $VERSION [skip ci]"
          git push

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Build JAR
        run: ./gradlew bootJar

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-review-server
          path: build/libs/*.jar

      # Docker image build and push steps
      - name: Set up Docker Buildx
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        if: startsWith(github.ref, 'refs/tags/')
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: ./gradlew bootBuildImage --publishImage

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: code-review-server
          path: artifacts

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.VERSION }}
          files: artifacts/*.jar
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true